/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE     0 /* (HANDS DOWN LAYER) */
#define GAME     1 /* (GAME LAYER) */
#define ALTG     2 /* (ALTERNATIVE GAME LAYER) */
#define NAVI     3 /* (NAVIGATION LAYER) */
#define NUMP     4 /* (NUMPAD LAYER) */
#define SYM1     5 /* (SYMBOL LAYER 1) */
#define SYM2     6 /* (SYMBOL LAYER 2) */

/ {
	behaviors {
			hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping_term_ms = <200>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
			};
	};

	keymap0: keymap {
		compatible = "zmk,keymap";

                dvorak_layer {
// -----------------------------------------------------------------------------------------
// |  ;  |  ,  |  .  |  P  |  Y  |   |  F  |  G  |  C  |  R  |  L  |
// |  A  |  O  |  E  |  U  |  I  |   |  D  |  H  |  T  |  N  |  S  |
// |  '  |  Q  |  J  |  K  |  X  |   |  B  |  M  |  W  |  V  |  Z  |
//             |     | TAB | ENT |   | BSPC| SPC |     |
                        bindings = <
        &none &none       &none      &none      &none        &none         &none  &none  &none &none          &none          &none      &none      &none       &none
        &none &kp SEMI    &kp COMMA  &kp DOT    &kp P        &kp Y         &none  &none  &none &kp F          &kp G          &kp C      &kp R      &kp L       &none
        &none &hm LCTRL A &hm LGUI O &hm LALT E &hm LSHFT U  &kp I         &none  &none  &none &kp D          &hm LSHFT H    &hm LALT T &hm LGUI N &hm LCTRL S &none
        &none &kp APOS    &kp Q      &kp J      &kp K        &kp X         &none  &none  &none &kp B          &kp M          &kp W      &kp V      &kp Z       &none
        &none &none       &none      &none      &lt NAVI TAB &lt NUMP RET  &none  &none  &none &lt NAVI SPACE &lt NUMP BSPC  &none      &none      &none       &none
                        >;
                };

                game_layer {
// -----------------------------------------------------------------------------------------
// | TAB |  Q  |  W  |  E  |  R  |   |  B  |  G  |  H  |  C  |  Q  |
// | SHFT|  A  |  S  |  D  |  F  |   |  P  |  T  |  N  |  R  |  S  |
// | CTRL|  Z  |  X  |  C  |  V  |   |  Z  |  D  |  L  |  M  |  X  |
//             |     |  I  | SPC |   | RET |  E  |     |
                        bindings = <
        &trans &kp ESC   &kp N3 &kp N2 &kp N1 &kp N4     &trans &trans &trans &trans        &trans      &trans     &trans     &trans      &trans 
        &trans &kp TAB   &kp Q  &kp W  &kp E  &kp R      &trans &trans &trans &kp B         &kp G       &kp H      &kp C      &kp Q       &trans 
        &trans &kp LSFT  &kp A  &kp S  &kp D  &kp F      &trans &trans &trans &kp P         &hm LSHFT T &hm LALT N &hm LGUI R &hm LCTRL S &trans 
        &trans &kp LCTRL &kp Z  &kp X  &kp C  &kp V      &trans &trans &trans &kp Z         &kp D       &kp L      &kp M      &kp X       &trans 
        &trans &trans    &trans &trans &kp I  &kp SPACE  &trans &trans &trans &lt NUMP RET  &lt NAVI E  &none      &trans     &trans      &trans
                        >;
                };

                alt_game_layer {
// -----------------------------------------------------------------------------------------
// | TAB |  Q  |  W  |  E  |  R  |   |  B  |  G  |  H  |  C  |  Q  |
// | SHFT|  A  |  S  |  D  |  F  |   |  P  |  T  |  N  |  R  |  S  |
// | CTRL|  Z  |  X  |  C  |  V  |   |  Z  |  D  |  L  |  M  |  X  |
//             |     |  I  | SPC |   | RET |  E  |     |
                        bindings = <
        &trans       &trans      &trans     &trans     &trans      &trans  &trans &kp ESC   &kp N3 &kp N2 &kp N1 &kp N4    &trans &trans &trans
        &kp B        &kp G       &kp H      &kp C      &kp Q       &trans  &trans &kp TAB   &kp Q  &kp W  &kp E  &kp R     &trans &trans &trans
        &kp P        &hm LSHFT T &hm LALT N &hm LGUI R &hm LCTRL S &trans  &trans &kp LSFT  &kp A  &kp S  &kp D  &kp F     &trans &trans &trans
        &kp Z        &kp D       &kp L      &kp M      &kp X       &trans  &trans &kp LCTRL &kp Z  &kp X  &kp C  &kp V     &trans &trans &trans
        &lt NUMP RET &lt NAVI E  &none      &trans     &trans      &trans  &trans &trans    &trans &trans &kp I  &kp SPACE &trans &trans &trans 
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |  %  |  *  |  {  |  }  |  !  |   | CAPS| HOME |  UP  | END  | DEL  |
// |  _  |  -  |  (  |  )  |  =  |   |  /  | LEFT | DOWN | RGT  | BKSP |
// |     |  &  |  [  |  ]  |  +  |   |  \  | ESC  | BT_1 | BT_2 | BCLR |
//             |     |     |     |   |     |      |      |
                        bindings = <
    &trans &trans    &trans    &trans   &trans   &trans    &trans &trans &trans &trans   &trans   &trans       &trans       &trans     &trans
    &trans &kp PRCNT &kp STAR  &kp LBRC &kp RBRC &kp EXCL  &trans &trans &trans &kp CAPS &kp HOME &kp UP       &kp END      &kp DEL    &trans
    &trans &kp UNDER &kp MINUS &kp LPAR &kp RPAR &kp EQUAL &trans &trans &trans &kp FSLH &kp LEFT &kp DOWN     &kp RIGHT    &kp BSPC   &trans
    &trans &trans    &kp AMPS  &kp LBKT &kp RBKT &kp PLUS  &trans &trans &trans &kp BSLH &kp ESC  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_CLR &trans
    &trans &trans    &trans    &trans   &trans   &trans    &trans &trans &trans &trans   &trans   &trans       &trans       &trans     &trans
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// | GME |  ~  |  #  |  ^  |  ?  |   |  C  |  7  |  8  |  9  |  F  |
// |  $  |  `  |  *  |  /  |  @  |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |  \  | "|" |   |  A  |  1  |  2  |  3  |  D  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
   &trans &tog ALTG &trans    &trans            &trans    &trans      &trans &trans &trans &trans  &trans  &trans  &trans  &trans &trans
   &trans &tog GAME &kp TILDE &kp HASH          &kp CARET &kp QMARK   &trans &trans &trans &kp C   &kp N7  &kp N8  &kp N9  &kp F  &trans
   &trans &kp DLLR  &kp GRAVE &kp STAR          &kp FSLH  &kp AT      &trans &trans &trans &kp B   &kp N4  &kp N5  &kp N6  &kp E  &trans
   &trans &trans    &trans    &rgb_ug RGB_TOG   &kp BSLH  &kp PIPE    &trans &trans &trans &kp A   &kp N1  &kp N2  &kp N3  &kp D  &trans
   &trans &trans    &trans    &trans            &trans    &trans      &trans &trans &trans &kp N0  &kp DOT &trans  &trans  &trans &trans
                        >;
                };

	};
};
