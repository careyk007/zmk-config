/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE     0 /* (HANDS DOWN LAYER) */
#define GAME     1 /* (GAME LAYER) */
#define NAVI     2 /* (NAVIGATION LAYER) */
#define NUMP     3 /* (NUMPAD LAYER) */
#define SYM1     4 /* (SYMBOL LAYER 1) */
#define SYM2     5 /* (SYMBOL LAYER 2) */

/* There are 7 layers, including the base layer */
/* Base: Hands Down */
/* Navigation:  */
/* Mouse: Not yet available in ZMK? */
/* Media:  */
/* Numerals:  */
/* Symbols:  */
/* Function and Systems: */

&lt {
        flavor = "hold-preferred";
};

/ {
        behaviors {
                hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping_term_ms = <200>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                // dvorak_layer {
// // -----------------------------------------------------------------------------------------
// // |  ;  |  ,  |  .  |  P  |  Y  |   |  F  |  G  |  C  |  R  |  L  |
// // |  A  |  O  |  E  |  U  |  I  |   |  D  |  H  |  T  |  N  |  S  |
// // |  '  |  Q  |  J  |  K  |  X  |   |  B  |  M  |  W  |  V  |  Z  |
// //             |     | TAB | ENT |   | BSPC| SPC |     |
                        // bindings = <
   // &kp SEMI    &kp COMMA  &kp DOT      &kp P        &kp Y          &kp F &kp G          &kp C         &kp R      &kp L
   // &hm LCTRL A &hm LGUI O &hm LALT E   &hm LSHFT U  &kp I          &kp D &hm LSHFT H    &hm LALT T    &hm LGUI N &hm LCTRL S
   // &kp APOS    &kp Q      &kp J        &kp K        &kp X          &kp B &kp M          &kp W         &kp V      &kp Z
                          // &lt NAVI TAB &lt NUMP RET &none          &none &lt NAVI SPACE &lt NUMP BSPC
                        // >;
                // };
                
                beakl_15_inspired {
// -----------------------------------------------------------------------------------------
// |  Q  |  H  |  O  |  U  |  X  |   |  G  |  C  |  R  |  F  |  Z  |
// |  Y  |  I  |  E  |  A  |  ;  |   |  D  |  S  |  T  |  N  |  B  |
// |  '  |  ,  |  J  |  K  |  .  |   |  W  |  M  |  L  |  P  |  V  |
//             | TAB | ENT |     |   |     | BSPC| SPC |
                        bindings = <
   &kp Q       &kp H      &kp O        &kp U        &kp X          &kp G          &kp C         &kp R         &kp F      &kp Z
   &hm LCTRL Y &hm LGUI I &hm LALT E   &hm LSHFT A  &kp SEMI       &kp D          &hm LSHFT S   &hm LALT T    &hm LGUI N &hm LCTRL B
   &kp APOS    &kp COMMA  &kp J        &kp K        &kp DOT        &kp W          &kp M         &kp L         &kp P      &kp V
                          &none        &lt NAVI TAB &lt NUMP RET   &lt NAVI SPACE &lt NUMP BSPC &none
                        >;
                };

                game_layer {
// -----------------------------------------------------------------------------------------
// | TAB |  Q  |  W  |  E  |  R  |   |  B  |  G  |  H  |  C  |  Q  |
// | SHFT|  A  |  S  |  D  |  F  |   |  P  |  T  |  N  |  R  |  S  |
// | CTRL|  Z  |  X  |  C  |  V  |   |  Z  |  D  |  L  |  M  |  X  |
//             |     |  I  | SPC |   | RET |  E  |     |
                        bindings = <
   &kp TAB    &kp Q  &kp W &kp E &kp R       &kp B        &kp G       &kp H      &kp C      &kp Q
   &kp LSFT   &kp A  &kp S &kp D &kp F       &kp P        &hm LSHFT T &hm LALT N &hm LGUI R &hm LCTRL S
   &kp LCTRL  &kp Z  &kp X &kp C &kp V       &kp Z        &kp D       &kp L      &kp M      &kp X
                     &none &kp I &kp SPACE   &lt NUMP RET &lt NAVI E  &none
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |  %  |  *  |  {  |  }  |  !  |   | CAPS| HOME |  UP  | END  | DEL  |
// |  _  |  -  |  (  |  )  |  =  |   |  /  | LEFT | DOWN | RGT  | BKSP |
// |     |  &  |  [  |  ]  |  +  |   |  \  | ESC  | BT_1 | BT_2 | BCLR |
//             |     |     |     |   |     |      |      |
                        bindings = <
   &kp PRCNT &kp STAR  &kp LBRC &kp RBRC &kp EXCL      &kp CAPS &kp HOME &kp UP       &kp END      &kp DEL
   &kp UNDER &kp MINUS &kp LPAR &kp RPAR &kp EQUAL     &kp FSLH &kp LEFT &kp DOWN     &kp RIGHT    &kp BSPC
   &trans    &kp AMPS  &kp LBKT &kp RBKT &kp PLUS      &kp BSLH &kp ESC  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_CLR
                       &trans   &trans   &trans        &trans   &trans   &trans
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// | GME |  ~  |  #  |  ^  |  ?  |   |  C  |  7  |  8  |  9  |  F  |
// |  $  |  `  |  *  |  /  |  @  |   |  B  |  4  |  5  |  6  |  E  |
// | BOOT|     |     |  \  | "|" |   |  A  |  1  |  2  |  3  |  D  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
   &tog GAME   &kp TILDE &kp HASH           &kp CARET &kp QMARK   &kp C  &kp N7  &kp N8  &kp N9  &kp F
   &kp DLLR    &kp GRAVE &kp STAR           &kp FSLH  &kp AT      &kp B  &kp N4  &kp N5  &kp N6  &kp E
   &bootloader &trans    &rgb_ug RGB_TOG    &kp BSLH  &kp PIPE    &kp A  &kp N1  &kp N2  &kp N3  &kp D
                         &trans             &trans    &trans      &trans &kp N0  &kp DOT
                        >;
                };
        };
};
